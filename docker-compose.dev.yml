# Docker compose file for development
services:
  postgres:
    image: postgres:13
    container_name: postgres
    hostname: postgres
    environment:
      - POSTGRES_USER=john
      - POSTGRES_PASSWORD=pwd0123456789
      - POSTGRES_DB=moni
    network_mode: host
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "5"

  adminer:
    image: adminer
    container_name: adminer
    hostname: adminer
    network_mode: host
    healthcheck:
      test: "curl -f localhost:8080 || false"
      interval: 30s
      timeout: 3s
      retries: 10
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "5"

  gotify:
    image: gotify/server
    container_name: gotify
    hostname: gotify
    network_mode: host
    environment:
      - GOTIFY_DEFAULTUSER_PASS=password
    volumes:
      - "./volumes/gotify:/app/data"

  httpbin:
    image: kennethreitz/httpbin
    container_name: httpbin
    hostname: httpbin
    network_mode: host

  api:
    build:
      context: .
      dockerfile: Dockerfile.dev.api
    command: >
      bash -c "python manage.py runserver 0.0.0.0:5000"
    working_dir: /app
    container_name: api
    hostname: api
    user: ${HOST_UID}:${HOST_GID}
    env_file:
      - .env
    network_mode: host
    volumes:
      - ./backend:/app
    healthcheck:
      test: "curl -f localhost:5000/__health || false"
      interval: 30s
      timeout: 3s
      retries: 10
      start_period: 5s
    depends_on:
      postgres:
        condition: service_started

  ui:
    build:
      context: .
      dockerfile: Dockerfile.dev.ui
    command: >
      bash -c "npm run dev"
    working_dir: /app
    container_name: ui
    hostname: ui
    user: ${HOST_UID}:${HOST_GID}
    env_file:
      - .env
    volumes:
      - ./frontend:/app
    network_mode: host
    depends_on:
      api:
        condition: service_healthy

  moni:
    build: .
    container_name: moni
    hostname: moni
    env_file:
      - .env
    ports:
      - 127.0.0.1:5000:8000
    depends_on:
      - postgres
      - gotify
