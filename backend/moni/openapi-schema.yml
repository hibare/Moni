openapi: 3.0.2
info:
  title: "Moni"
  version: "0.0.0"
  description: |
    Moni - A HTTP service monitoring solution OpenAPI schema.
    Checkout project on [Github](https://github.com/hibare/Moni).
  license:
    name: MIT
    url: https://github.com/hibare/Moni/blob/master/LICENSE
tags:
  - name: Auth Token
    description: API's to manage authentication token.
  - name: Jobs
    description: |
      API's to manage Jobs.
      Each job an individual monitor to monitor a single service.
  - name: Jobs History
    description: API's to manage jobs history.
  - name: Notifications
    description: |
      API's to manage all notifications services.
      Notifications are used by Jobs to send out alert for undesired monitoring responses.
  - name: Notifications History
    description: API to manage notifications history.
paths:
  /api/v1/accounts/token/:
    post:
      operationId: Create / Get Token
      description: Create or get API Token
      parameters: []
      security: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthToken"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
          description: ""
        "400":
          $ref: "#/components/responses/BadRequestError"
      tags:
        - Auth Token
    put:
      operationId: Regenerate API Token
      description: Regenerate API token
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      tags:
        - Auth Token
    delete:
      operationId: Delete API token
      description: Delete API token
      parameters: []
      responses:
        "204":
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      tags:
        - Auth Token
  /api/v1/jobs/:
    get:
      operationId: List Jobs
      description: List all Jobs
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Jobs"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      tags:
        - Jobs
    post:
      operationId: New Job
      description: Create new Job
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Jobs"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Jobs"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Jobs"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Jobs"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      tags:
        - Jobs
  /api/v1/jobs/{uuid}/:
    get:
      operationId: Job details
      description: Get a Job details
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Jobs.
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Jobs"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "No such job"
      tags:
        - Jobs
    put:
      operationId: Update Job
      description: Update a Job
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Jobs.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Jobs"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Jobs"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Jobs"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Jobs"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "No such job"
      tags:
        - Jobs
    patch:
      operationId: Partial update Job
      description: Partial update a Job
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Jobs.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Jobs"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Jobs"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Jobs"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Jobs"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "No such job"
      tags:
        - Jobs
    delete:
      operationId: Delete Job
      description: Delete a Job
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Jobs.
          schema:
            type: string
      responses:
        "204":
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "No such job"
      tags:
        - Jobs
  /api/v1/jobs/{uuid}/pause/:
    post:
      operationId: Pause Job
      description: Pause a Job execution
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Jobs.
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Jobs"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "No such job"
      tags:
        - Jobs
  /api/v1/jobs/{uuid}/resume/:
    post:
      operationId: Resume Job
      description: Resume Job execution
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Jobs.
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Jobs"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "No such job"
      tags:
        - Jobs
  /api/v1/jobs/{uuid}/uptime/:
    get:
      operationId: Job uptime
      description: Returns a job uptime (Percentage)
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Jobs.
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Jobs"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "No such job"
      tags:
        - Jobs
  /api/v1/jobs/{uuid}/response/:
    get:
      operationId: Job response time
      description: Job response time (avg. seconds)
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Jobs.
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Jobs"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "No such job"
      tags:
        - Jobs
  /api/v1/jobs/history/:
    get:
      operationId: List jobs execution history
      description: "List all jobs execution history"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JobsHistory"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      tags:
        - Jobs History
  /api/v1/jobs/{uuid}/history/:
    get:
      operationId: Get a Job History
      description: Get a Job execution history
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Jobs.
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JobsHistory"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "Job history not found"
      tags:
        - Jobs History
    delete:
      operationId: Delete a Job history
      description: Delete a Job execution history
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Jobs.
          schema:
            type: string
      responses:
        "204":
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "Job history not found"
      tags:
        - Jobs History
  /api/v1/notifications/:
    get:
      operationId: List Notifications
      description: List all Notifications
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notifications"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      tags:
        - Notifications
    post:
      operationId: Create Notificaiton
      description: Create new Notification
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notifications"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Notifications"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Notifications"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notifications"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      tags:
        - Notifications
  /api/v1/notifications/{uuid}/:
    get:
      operationId: Get a Notification
      description: Get a Notification details
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Notification.
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notifications"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "No such notification"
      tags:
        - Notifications
    put:
      operationId: Upate Notification
      description: Update a Notification details
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Notification.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notifications"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Notifications"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Notifications"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notifications"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "No such notification"
      tags:
        - Notifications
    patch:
      operationId: Partial update Notification
      description: Partial update a Notification details
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Notification.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notifications"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Notifications"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Notifications"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notifications"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "No such notification"
      tags:
        - Notifications
    delete:
      operationId: Delete Notification
      description: Delete a Notification
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Notification.
          schema:
            type: string
      responses:
        "204":
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "No such notification"
      tags:
        - Notifications
  /api/v1/notifications/{uuid}/test/:
    post:
      operationId: Test a Notification
      description: Test a Notification endpoint
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Notification.
          schema:
            type: string
      responses:
        "200":
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "No such notification"
      tags:
        - Notifications
  /api/v1/notifications/history/:
    get:
      operationId: List notificaitons history
      description: List notificaitons history
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotificationsHistory"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      tags:
        - Notifications History
  /api/v1/notifications/{uuid}/history/:
    get:
      operationId: Get a notification history
      description: Return a notification execution history
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Notification.
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotificationsHistory"
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "Notification history not found"
      tags:
        - Notifications History
    delete:
      operationId: Delete a notification history
      description: Delete a notification execution history
      parameters:
        - name: uuid
          in: path
          required: true
          description: A unique value identifying this Notification.
          schema:
            type: string
      responses:
        "204":
          description: ""
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: "Notification history not found"
      tags:
        - Notifications History
security:
  - bearerAuth: []
components:
  responses:
    UnauthorizedError:
      description: API token is missing or invalid
    BadRequestError:
      description: Bad request, missing / invalid request parameters
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      description: API uses bearer authentication mechanism
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
        - username
        - password
    Jobs:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          maxLength: 200
          pattern:
            "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
            -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
        title:
          type: string
          maxLength: 50
        state:
          type: boolean
        headers:
          type: object
        notifications:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
                readOnly: true
              url:
                type: string
                format: uri
                maxLength: 200
                pattern:
                  "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
                  d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\\
                  d?)){3}|\\[[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF\
                  0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\\
                  .(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\\
                  d{2,5})?(?:[/?#][^\\s]*)?\\z"
              type:
                enum:
                  - slack
                  - discord
                  - webhook
                  - gotify
                type: string
              description:
                type: string
            required:
              - url
              - type
              - description
        verify_ssl:
          type: boolean
        interval:
          type: integer
          maximum: 2147483647
          minimum: 0
        success_status:
          type: array
          items:
            type: integer
            maximum: 2147483647
        check_redirect:
          type: boolean
      required:
        - url
        - title
    JobsHistory:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          readOnly: true
        status_code:
          type: integer
          readOnly: true
        success:
          type: boolean
          readOnly: true
        response_time:
          type: number
          readOnly: true
        error:
          type: string
          readOnly: true
    Notifications:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          maxLength: 200
          pattern:
            "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
            -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{2,5})?(?:[/?#][^\\\
            s]*)?\\z"
        type:
          enum:
            - slack
            - discord
            - webhook
            - gotify
          type: string
        description:
          type: string
      required:
        - url
        - type
        - description
    NotificationsHistory:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
        status:
          type: boolean
          readOnly: true
        status_code:
          type: integer
          readOnly: true
        error:
          type: string
          readOnly: true
